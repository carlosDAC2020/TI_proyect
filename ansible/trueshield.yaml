---
- name: Configuracion general
  hosts: all
  remote_user: ubuntu
  gather_facts: no
  tasks:
    - name: Actualizar la lista de paquetes en todos los servidores
      become: yes
      apt:
        update_cache: yes
    
    - name: Instalar Docker en todos los servidores
      become: yes
      apt:
        name: docker.io
        state: present

    - name: Iniciar el servicio de Docker en todos los servidores
      become: yes
      service:
        name: docker
        state: started
        enabled: yes

    - name: Dar permisos de ejecucion a docker 
      become: yes
      command: sudo usermod -aG docker $USER

- name: Configuracion para el manager server
  hosts: server1
  remote_user: ubuntu
  gather_facts: no
  tasks:
    - name: Definir variables de entorno
      set_fact:
        IMAGE_TAG: "{{ lookup('env', 'IMAGE_TAG') }}"
        DB_USER: "{{ lookup('env', 'DB_USER') }}"
        DB_PASSWORD: "{{ lookup('env', 'DB_PASSWORD') }}"
        DB_HOST: "{{ lookup('env', 'DB_HOST') }}"
        DB_NAME: "{{ lookup('env', 'DB_NAME') }}"

    - name: Descarga de imagen de aplicacion
      become: yes
      command: sudo docker pull cdapdev2020/dj-manager-server:{{ IMAGE_TAG }}

    - name: Arrancar el container 
      become: yes
      command: sudo docker run -d -p 8000:8000 -e DB_USER={{ DB_USER }} -e DB_PASSWORD={{ DB_PASSWORD }} -e DB_HOST={{ DB_HOST }} -e DB_NAME={{ DB_NAME }} cdapdev2020/dj-manager-server:{{ IMAGE_TAG }}

- name: Configuracion para el api-rss
  hosts: server2
  remote_user: ubuntu
  gather_facts: no
  tasks:
    - name: Definir variables de entorno
      set_fact:
        IMAGE_TAG: "{{ lookup('env', 'IMAGE_TAG') }}"
        DB_USER: "{{ lookup('env', 'DB_USER') }}"
        DB_PASSWORD: "{{ lookup('env', 'DB_PASSWORD') }}"
        DB_HOST: "{{ lookup('env', 'DB_HOST') }}"
        DB_NAME: "{{ lookup('env', 'DB_NAME') }}"

    - name: Descarga de imagen de aplicacion 
      become: yes
      command: sudo docker pull cdapdev2020/rss-api:{{ IMAGE_TAG }}

    - name: Arrancar el container 
      become: yes
      command: sudo docker run -d -p 8001:8001 -e DB_USER={{ DB_USER }} -e DB_PASSWORD={{ DB_PASSWORD }} -e DB_HOST={{ DB_HOST }} -e DB_NAME={{ DB_NAME }} cdapdev2020/rss-api:{{ IMAGE_TAG }}

- name: Configuracion para el cliente de angular
  hosts: server3
  remote_user: ubuntu
  gather_facts: no
  tasks:
    - name: Definir variables de entorno
      set_fact:
        IMAGE_TAG: "{{ lookup('env', 'IMAGE_TAG') }}"

    - name: Descarga de imagen de aplicacion 
      become: yes
      command: sudo docker pull cdapdev2020/angular-clinet:{{ IMAGE_TAG }}

    - name: Arrancar el container 
      become: yes
      command: sudo docker run -d -p 80:4200 cdapdev2020/angular-clinet:{{ IMAGE_TAG }}
